@model BiscuitChief.Models.RecipeSearch

@{
    ViewBag.Title = "Search Recipes";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="PageTitle">
        Find a Recipe

        @if (HttpContext.Current.User.IsInRole("FULLACCESS"))
        {
            <span style="font-weight:normal; font-size:12px; padding-left:20px;">
                @Html.ActionLink("< Create New >", "Create")
            </span>
        }
    </div>

    <ul class="InputRow">
        <li class="InputLabel">@Html.LabelFor(model => model.SearchText):</li>
        <li class="InputField">@Html.TextBoxFor(model => model.SearchText)</li>
    </ul>
    
    <div>
        @for (int i = 0; i < Model.SearchCategoryList.Count; i++)
        {
            <span style="padding-right:15px; white-space:nowrap;">
                @Html.HiddenFor(item => Model.SearchCategoryList[i].CategoryCode)
                @Html.HiddenFor(item => Model.SearchCategoryList[i].CategoryName)
                @Model.SearchCategoryList[i].CategoryName
                @Html.CheckBoxFor(item => Model.SearchCategoryList[i].IsSelected)
            </span>
        }
</div>
    <br/>
    <input type="button" class="BtnSubmit" id="btn-submit" value="Search" onclick="SearchRecipes(1)" />
    <br/><br/>
    <div id="SearchResults">
        <div id="SearchResultsHeading">
            @Model.SearchResultText
        </div>

        @for (int i = 0; i < Model.SearchResults.Count; i++)
        {
            <div id="SearchItem">
                <div id="SearchTitle" style="clear:both;" onclick="javascript:ViewRecipe('@Model.SearchResults[i].RecipeID');">
                    @Model.SearchResults[i].Title
                    @if (HttpContext.Current.User.IsInRole("FULLACCESS"))
                    {
                        <div style="font-weight:normal; font-size:12px; float:right;">
                            @Html.ActionLink("< Edit >", "Create", new { recipeid = Model.SearchResults[i].RecipeID })
                        </div>
                    }
                </div>
                @if (Model.SearchResults[i].CategoryList.Count > 0)
                {
                    <div id="SearchCategories">
                        @for (int c = 0; c < Model.SearchResults[i].CategoryList.Count; c++)
                        {
                            @Model.SearchResults[i].CategoryList[c].CategoryName
                            <span>&nbsp;</span>
                        }
                    </div>
                }
                @if (!String.IsNullOrEmpty(Model.SearchResults[i].Description))
                {
                    <div id="SearchDescription">
                        @Model.SearchResults[i].Description
                    </div>
                }
            </div>
        }

        @if (Model.SearchResults.Count > 0)
        {
            <br/>
            <div class="Pager">
                @if (Model.PageNumber > 1)
                {
                    <div class="Selector" onclick="SearchRecipes(1);">&lt;&lt;</div>
                    <div class="Selector" onclick="SearchRecipes(@PortalUtility.PagerHelper.GetPreviousPage(Model.PageNumber));">&lt;</div>
                }
                @for (int i = PortalUtility.PagerHelper.GetPagerStart(Model.PageNumber, 2, Model.PageCount); i <= PortalUtility.PagerHelper.GetPagerEnd(Model.PageNumber, 2, Model.PageCount); i++)
                {
                    if (i == Model.PageNumber)
                    { <div class="Selector CurrentPage">@i</div> }
                    else
                    { <div class="Selector" onclick="SearchRecipes(@i);">@i</div> }

                }
                @if (Model.PageNumber < Model.PageCount)
                {
                    <div class="Selector" onclick="SearchRecipes(@PortalUtility.PagerHelper.GetNextPage(Model.PageNumber, Model.PageCount));">&gt;</div>
                    <div class="Selector" onclick="SearchRecipes(@Model.PageCount);">&gt;&gt;</div>
                }
            </div>
        }

        @Html.HiddenFor(item => Model.PageCount)
        @Html.HiddenFor(item => Model.PageNumber)
        @Html.HiddenFor(item => Model.PageSize)

    </div>

    <script language="javascript" type="text/javascript">

        function ViewRecipe(id)
        {
            window.open('@Url.Action("Recipe", "Recipes")?recipeid=' + id, "_self");
        }

        function SearchRecipes(pagenum)
        {
            $("#PageNumber").val(pagenum);
            $("form").submit();
        }

    </script>
    
}
